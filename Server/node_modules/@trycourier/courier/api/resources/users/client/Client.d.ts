/**
 * This file was auto-generated by Fern from our API Definition.
 */
import * as environments from "@trycourier/courier/environments";
import * as core from "@trycourier/courier/core";
import { Preferences } from "@trycourier/courier/api/resources/users/resources/preferences/client/Client";
import { Tenants } from "@trycourier/courier/api/resources/users/resources/tenants/client/Client";
import { Tokens } from "@trycourier/courier/api/resources/users/resources/tokens/client/Client";
export declare namespace Users {
    interface Options {
        environment?: core.Supplier<environments.CourierEnvironment | string>;
        authorizationToken?: core.Supplier<core.BearerToken | undefined>;
        fetcher?: core.FetchFunction;
    }
    interface RequestOptions {
        timeoutInSeconds?: number;
        maxRetries?: number;
    }
}
export declare class Users {
    protected readonly _options: Users.Options;
    constructor(_options?: Users.Options);
    protected _preferences: Preferences | undefined;
    get preferences(): Preferences;
    protected _tenants: Tenants | undefined;
    get tenants(): Tenants;
    protected _tokens: Tokens | undefined;
    get tokens(): Tokens;
}
